---
# tasks file for mongodb
- name: create pvc
  k8s:
    definition:
      apiVerison: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "{{ pvcName }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
      spec:
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

- name: create mongodb deployment
  k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata: 
        name: "mongodb"
        namespace: "{{ ansible_operator_meta.namespace }}"
        labels:
          template: mongodb-ephemeral-template
      spec:
        strategy:
          type: Recreate
          recreateParams:
            timeoutSeconds: 600
        replicas: 1
        test: false
        selector:
          matchLabels:
            name: mongodb
        template:
          metadata:
            creationTimestamp:
            labels:
              name: mongodb
          spec:
            volumes:
            - name: mongodb-data
              persistentVolumeClaim:
                claimName: "{{ pvcName }}"
            containers:
            - name: mongodb
              image: "{{ lookup('env','RELATED_IMAGE_DB') | quote }}"
              ports:
              - containerPort: 27017
                protocol: TCP
              env:
              - name: MONGODB_USER
                value: "{{ mongodb_user }}"
              - name: MONGODB_PASSWORD
                value: "{{ mongodb_password }}"
              - name: MONGODB_DATABASE
                value: "{{ mongodb_database }}"
              - name: MONGODB_ADMIN_PASSWORD
                value: "{{ mongodb_admin_password }}"
              resources:
                limits:
                  memory: "{{ memory_limit }}"
              volumeMounts:
              - name: "{{ pvcName }}"
                mountPath: "/var/lib/mongodb/data"
              livenessProbe:
                tcpSocket:
                  port: 27017
                initialDelaySeconds: 30
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                exec:
                  command:
                  - "/bin/sh"
                  - "-i"
                  - "-c"
                  - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                    --eval="quit()"
                initialDelaySeconds: 3
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: IfNotPresent
              securityContext:
                capabilities: {}
                privileged: false
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: ClusterFirst
            securityContext: {}

- name: create mongodb service
  k8s:
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: mongodb
        namespace: "{{ ansible_operator_meta.namespace }}"
        creationTimestamp:
        labels:
          template: mongodb-ephemeral-template
      spec:
        ports:
        - name: mongo
          protocol: TCP
          port: 27017
          targetPort: 27017
        selector:
          name: mongodb
        type: ClusterIP
        sessionAffinity: None
      status:
        loadBalancer: {}

- name: create backup pvc
  k8s:
    definition:
      apiVerison: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "{{ backup.pvc }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
      spec:
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

## This task creates a regularly-scheduled backup. You can add a similar task to any Ansible operator to add this functionality

- name: create backup cron job
  k8s:
    definition:
      kind: CronJob
      apiVersion: batch/v1beta1
      metadata:
        name: "{{ backup.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
      spec:
        schedule: "{{ backup.schedule }}"  #Don't forget to add variables to the defaults and CR!
#        schedule: 1/* * * * *
        jobTemplate:
          spec:
            template:
              spec:
                restartPolicy: "Never"
                volumes:
                - name: mongodb-data
                  persistentVolumeClaim:
                    claimName: "{{ pvcName }}"
                - name: mongodb-backups
                  persistentVolumeClaim:
                    claimName: "{{ backup.pvc }}"
                containers:
                - name: scheduledbackup
                  image: "{{ lookup('env','RELATED_IMAGE_BACKUP_RESTORE') | quote }}"
                  args:  #This bit is the actual backup logic - change it as needed for your operator
                  - /bin/sh
                  - -c 
                  - tar -cvf /backups/scheduled-$(date +"%d-%m-%Y-%H-%M").tar /var/lib/mongodb/data
                  volumeMounts:
                  - name: mongodb-data
                    mountPath: "/var/lib/mongodb/data"
                  - name: mongodb-backups
                    mountPath: "/backups"

